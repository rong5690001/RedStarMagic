apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "chajian.ne.com.pluginapk"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    dataBinding {
        enabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

repositories {
    flatDir {
        dirs 'libs' //this way we can find the .aar file in libs folder
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation project(':magiclib')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    provided(name: 'pluginlib-debug', ext: 'aar')
}

task copyPluginApk(type: Copy) {
//    println('> Task :pluginapk:copyPluginApk')
    group 'myTask'
    from "build/outputs/apk/debug/pluginapk-debug.apk"
    into '../app/src/main/assets'
    rename { String fileName ->
        fileName = "plugin.apk"
    }
}

afterEvaluate {
    println("-------------------------afterEvaluate---------------------------")
    tasks.matching {
        // 以process开头以ReleaseJavaRes或DebugJavaRes结尾的task
//        it.name.startsWith('pluginapk') && (it.name.endsWith('assembleDebug') || it.name.endsWith
//                ('assembleRelease'))
        it.name == 'assembleDebug'
    }.each { task ->
        task.doLast {
            copy {
//    println('> Task :pluginapk:copyPluginApk')
                from new File(project.getBuildDir(), 'outputs/apk/debug/pluginapk-debug.apk').absolutePath
                into new File(project.getRootProject().getProjectDir(), 'app/src/main/assets')
                rename { String fileName ->
                    fileName = "plugin.apk"
                }
//            thisObject copyPluginApk
            } // 任务依赖：执行task之后需要执行dependsOn指定的任务
        }
    }
}

//project.afterEvaluate {
//    project.tasks.each {
//        if (it.name == "assembleDebug") {
//            it.doLast {
//                copy {
//                    from new File(project.getBuildDir(), 'outputs/apk/debug/plugin-debug.apk').absolutePath
//                    into new File(project.getRootProject().getProjectDir(), 'app/src/main/assets')
//                    rename 'plugin-debug.apk', 'plugin.apk'
//                }
//            }
//        }
//    }
//}
