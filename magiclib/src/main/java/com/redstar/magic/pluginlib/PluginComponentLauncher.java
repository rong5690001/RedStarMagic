package com.redstar.magic.pluginlib;import android.content.ComponentName;import android.content.Intent;import android.content.ServiceConnection;import android.os.Bundle;import android.util.Pair;import com.redstar.magic.pluginlib.proxy.IProxyActivity;import com.redstar.magic.pluginlib.proxy.PluginProxyActivity;/** * Created by chen.huarong on 2019-07-28. * 插件启动系统组件 */public class PluginComponentLauncher implements IPluginComponentLauncher {    @Override    public boolean startActivity(MagicContext shadowContext, Intent intent) {        shadowContext.superStartActivity(convertPluginActivityIntent(intent));        return true;    }    @Override    public boolean startActivityForResult(IProxyActivity delegator, Intent intent, int requestCode,                                          Bundle option, ComponentName callingActivity) {        delegator.startActivityForResult(convertPluginActivityIntent(intent), requestCode, option);        return true;    }    @Override    public Pair<Boolean, ComponentName> startService(MagicContext context, Intent service) {        return null;    }    @Override    public Pair<Boolean, Boolean> stopService(MagicContext context, Intent name) {        return null;    }    @Override    public Pair<Boolean, Boolean> bindService(MagicContext context, Intent service, ServiceConnection conn,                                              int flags) {        return null;    }    @Override    public Pair<Boolean, ?> unbindService(MagicContext context, ServiceConnection conn) {        return null;    }    @Override    public Intent convertPluginActivityIntent(Intent pluginIntent) {        Intent intentProxy = new Intent(pluginIntent);        intentProxy.setExtrasClassLoader(PluginManager.getInstance().getPluginApk().mClassLoader);        intentProxy.putExtra(KEY_CLASS_NAME, pluginIntent.getComponent().getClassName());        intentProxy.setComponent(new ComponentName("com.redstar.magic", PluginProxyActivity.class.getName()));        return intentProxy;    }}