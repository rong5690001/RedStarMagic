package com.redstar.magic.pluginlib.utils;import android.content.Context;import android.content.res.Resources;import android.content.res.XmlResourceParser;import android.view.InflateException;import android.widget.Toast;import org.xmlpull.v1.XmlPullParser;import org.xmlpull.v1.XmlPullParserException;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;/** * Created by chen.huarong on 2019-07-28. */public class FileUtils {    /**     * 将Assets目录下的fileName文件拷贝至app缓存目录     * @param context     * @param fileName     * @return     */    public static String copyAssetAndWrite(Context context, String fileName) {        try {            File cacheDir = context.getCacheDir();            if (!cacheDir.exists()) {                cacheDir.mkdirs();            }            File outFile = new File(cacheDir, fileName);            if (!outFile.exists()) {                boolean res = outFile.createNewFile();                if (res) {                    InputStream is = context.getAssets().open(fileName);                    FileOutputStream fos = new FileOutputStream(outFile);                    byte[] buffer = new byte[is.available()];                    int byteCount;                    while ((byteCount = is.read(buffer)) != -1) {                        fos.write(buffer, 0, byteCount);                    }                    fos.flush();                    is.close();                    fos.close();                    Toast.makeText(context, "下载成功", Toast.LENGTH_SHORT).show();                    return outFile.getAbsolutePath();                }            } else {                Toast.makeText(context, "文件已存在", Toast.LENGTH_SHORT).show();                return outFile.getAbsolutePath();            }        } catch (IOException e) {            e.printStackTrace();        }        return "";    }    public static class XmlPullParserUtil {        public static String getLayoutStartTagName(Resources res, int layoutResID) {            XmlResourceParser parser;            String name;            try {                int type;                parser = res.getLayout(layoutResID);                while ((type = parser.next()) != XmlPullParser.START_TAG &&                        type != XmlPullParser.END_DOCUMENT) {                    // Empty                }                if (type != XmlPullParser.START_TAG) {                    throw new InflateException(parser.getPositionDescription()                            + ": No start tag found!");                }                name = parser.getName();            } catch (XmlPullParserException e) {                final InflateException ie = new InflateException(e.getMessage(), e);                ie.setStackTrace(new StackTraceElement[0]);                throw ie;            } catch (Exception e) {                final InflateException ie = new InflateException(e.getMessage(), e);                ie.setStackTrace(new StackTraceElement[0]);                throw ie;            }            return name;        }    }}